{"remainingRequest":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/thread-loader/dist/cjs.js!/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/babel-loader/lib/index.js!/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/ts-loader/index.js??ref--14-3!/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/eslint-loader/index.js??ref--13-0!/Users/kharelthompson/Coding/its-lit-app UPWORK/public/src/views/account/profile/profile.component.ts?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/src/views/account/profile/profile.component.ts","mtime":1618831816723},{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/cache-loader/dist/cjs.js","mtime":1618827696254},{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/thread-loader/dist/cjs.js","mtime":1618827696331},{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/babel-loader/lib/index.js","mtime":1618827696227},{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/ts-loader/index.js","mtime":1618827724380},{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/eslint-loader/index.js","mtime":1618827722778}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2toYXJlbHRob21wc29uL0NvZGluZy9pdHMtbGl0LWFwcCBVUFdPUksvcHVibGljL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9raGFyZWx0aG9tcHNvbi9Db2RpbmcvaXRzLWxpdC1hcHAgVVBXT1JLL3B1YmxpYy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL2toYXJlbHRob21wc29uL0NvZGluZy9pdHMtbGl0LWFwcCBVUFdPUksvcHVibGljL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2toYXJlbHRob21wc29uL0NvZGluZy9pdHMtbGl0LWFwcCBVUFdPUksvcHVibGljL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL2toYXJlbHRob21wc29uL0NvZGluZy9pdHMtbGl0LWFwcCBVUFdPUksvcHVibGljL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL1VzZXJzL2toYXJlbHRob21wc29uL0NvZGluZy9pdHMtbGl0LWFwcCBVUFdPUksvcHVibGljL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSAidHNsaWIiOwppbXBvcnQgVnVlV3JhcHBlciBmcm9tICdAL2NvbXBvbmVudHMvY29yZS9WdWUvdnVlLndyYXBwZXInOwppbXBvcnQgeyBDb3JlU2VydmljZSwgRmlyZWJhc2VTZXJ2aWNlLCBMb2FkZXJTZXJ2aWNlLCBTZXNzaW9uIH0gZnJvbSAnQC9zZGsnOwppbXBvcnQgZmlyZWJhc2UgZnJvbSAnZmlyZWJhc2UvYXBwJzsKaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7Cgp2YXIgUHJvZmlsZUNvbXBvbmVudCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1Z1ZVdyYXBwZXIpIHsKICBfaW5oZXJpdHMoUHJvZmlsZUNvbXBvbmVudCwgX1Z1ZVdyYXBwZXIpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFByb2ZpbGVDb21wb25lbnQpOwoKICBmdW5jdGlvbiBQcm9maWxlQ29tcG9uZW50KCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQcm9maWxlQ29tcG9uZW50KTsKCiAgICBfdGhpcyA9IF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyAvLyBQcm9wZXJ0aWVzCgogICAgX3RoaXMuRGlzcGxheU5hbWUgPSBuZXcgU2Vzc2lvbigpLlNlc3Npb25WYWx1ZS5EaXNwbGF5TmFtZTsKICAgIF90aGlzLlBhc3N3b3JkID0gJyc7CiAgICBfdGhpcy5GaXJlYmFzZVNydiA9IG5ldyBGaXJlYmFzZVNlcnZpY2UoKTsgLy8gU2VydmljZXMKCiAgICBfdGhpcy5Mb2FkZXJTZXJ2aWNlID0gbmV3IExvYWRlclNlcnZpY2UoKTsKICAgIHJldHVybiBfdGhpczsKICB9IC8vIE1ldGhvZHMKCgogIF9jcmVhdGVDbGFzcyhQcm9maWxlQ29tcG9uZW50LCBbewogICAga2V5OiAidXBkYXRlUHJvZmlsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3VwZGF0ZVByb2ZpbGUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIF90aGlzJEZpcmViYXNlU3J2JEF1dDMsIF9TZXNzaW9uJFNlc3Npb25WYWx1ZSwgX3RoaXMkRmlyZWJhc2VTcnYkQXV0LCBfdGhpcyRGaXJlYmFzZVNydiRBdXQyLCBjdXJyUGFzcywgY3JlZGVudGlhbDsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgdGhpcy5Mb2FkZXJTZXJ2aWNlLnNob3dGdWxsU2NyZWVuTG9hZGVyKCdVcGRhdGluZyBwcm9maWxlLi4uJyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuUGFzc3dvcmQpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjdXJyUGFzcyA9IHByb21wdCgnRW50ZXIgeW91ciBjdXJyZW50IHBhc3N3b3JkJyk7CgogICAgICAgICAgICAgICAgaWYgKGN1cnJQYXNzKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBuZXcgTG9hZGVyU2VydmljZSgpLmhpZGVGdWxsU2NyZWVuTG9hZGVyKCk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgY3JlZGVudGlhbCA9IGZpcmViYXNlLmF1dGguRW1haWxBdXRoUHJvdmlkZXIuY3JlZGVudGlhbChuZXcgU2Vzc2lvbigpLlNlc3Npb25WYWx1ZS5FbWFpbCwgY3VyclBhc3MpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgcmV0dXJuIChfdGhpcyRGaXJlYmFzZVNydiRBdXQgPSB0aGlzLkZpcmViYXNlU3J2LkF1dGguY3VycmVudFVzZXIpID09PSBudWxsIHx8IF90aGlzJEZpcmViYXNlU3J2JEF1dCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkRmlyZWJhc2VTcnYkQXV0LnJlYXV0aGVudGljYXRlV2l0aENyZWRlbnRpYWwoY3JlZGVudGlhbCk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICByZXR1cm4gKF90aGlzJEZpcmViYXNlU3J2JEF1dDIgPSB0aGlzLkZpcmViYXNlU3J2LkF1dGguY3VycmVudFVzZXIpID09PSBudWxsIHx8IF90aGlzJEZpcmViYXNlU3J2JEF1dDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJEZpcmViYXNlU3J2JEF1dDIudXBkYXRlUGFzc3dvcmQodGhpcy5QYXNzd29yZCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IFByb21pc2U7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICByZXR1cm4gKF90aGlzJEZpcmViYXNlU3J2JEF1dDMgPSB0aGlzLkZpcmViYXNlU3J2LkF1dGguY3VycmVudFVzZXIpID09PSBudWxsIHx8IF90aGlzJEZpcmViYXNlU3J2JEF1dDMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJEZpcmViYXNlU3J2JEF1dDMudXBkYXRlUHJvZmlsZSh7CiAgICAgICAgICAgICAgICAgIGRpc3BsYXlOYW1lOiB0aGlzLkRpc3BsYXlOYW1lCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQxID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkZpcmViYXNlU3J2LkRiLmNvbGxlY3Rpb24oJy91c2VycycpLmRvYygoX1Nlc3Npb24kU2Vzc2lvblZhbHVlID0gbmV3IFNlc3Npb24oKS5TZXNzaW9uVmFsdWUpID09PSBudWxsIHx8IF9TZXNzaW9uJFNlc3Npb25WYWx1ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX1Nlc3Npb24kU2Vzc2lvblZhbHVlLklkKS51cGRhdGUoewogICAgICAgICAgICAgICAgICBEaXNwbGF5TmFtZTogdGhpcy5EaXNwbGF5TmFtZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgICBfY29udGV4dC50MiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MyA9IFtfY29udGV4dC50MSwgX2NvbnRleHQudDJdOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIyOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnQwLmFsbC5jYWxsKF9jb250ZXh0LnQwLCBfY29udGV4dC50Myk7CgogICAgICAgICAgICAgIGNhc2UgMjI6CiAgICAgICAgICAgICAgICBuZXcgU2Vzc2lvbigpLlNlc3Npb24ubmV4dChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG5ldyBTZXNzaW9uKCkuU2Vzc2lvblZhbHVlKSwge30sIHsKICAgICAgICAgICAgICAgICAgRGlzcGxheU5hbWU6IHRoaXMuRGlzcGxheU5hbWUKICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgIG5ldyBTZXNzaW9uKCkuc2F2ZSgpOwogICAgICAgICAgICAgICAgbmV3IENvcmVTZXJ2aWNlKCkuc2hvd0FsZXJ0KCdZb3VyIHByb2ZpbGUgaGFzIGJlZW4gdXBkYXRlZCBzdWNjZXNzZnVsbHkhJyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzA7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAyNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyNzsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQ0ID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBuZXcgQ29yZVNlcnZpY2UoKS5zaG93QWxlcnQodGhpcy5GaXJlYmFzZVNydi5nZXRFcnJvck1lc3NhZ2UoX2NvbnRleHQudDQpLCAnZXJyb3InKTsKCiAgICAgICAgICAgICAgY2FzZSAzMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAzMDsKICAgICAgICAgICAgICAgIG5ldyBMb2FkZXJTZXJ2aWNlKCkuaGlkZUZ1bGxTY3JlZW5Mb2FkZXIoKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5maW5pc2goMzApOwoKICAgICAgICAgICAgICBjYXNlIDMzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1sxLCAyNywgMzAsIDMzXV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiB1cGRhdGVQcm9maWxlKCkgewogICAgICAgIHJldHVybiBfdXBkYXRlUHJvZmlsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gdXBkYXRlUHJvZmlsZTsKICAgIH0oKQogIH1dKTsKCiAgcmV0dXJuIFByb2ZpbGVDb21wb25lbnQ7Cn0oVnVlV3JhcHBlcik7CgpQcm9maWxlQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbQ29tcG9uZW50XSwgUHJvZmlsZUNvbXBvbmVudCk7CmV4cG9ydCBkZWZhdWx0IFByb2ZpbGVDb21wb25lbnQ7"},{"version":3,"sources":["/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/eslint-loader/index.js??ref--13-0!/Users/kharelthompson/Coding/its-lit-app UPWORK/public/src/views/account/profile/profile.component.ts?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,UAAP,MAAuB,mCAAvB;AACA,SAAS,WAAT,EAAsB,eAAtB,EAAuC,aAAvC,EAAsD,OAAtD,QAAqE,OAArE;AACA,OAAO,QAAP,MAAqB,cAArB;AACA,SAAS,SAAT,QAA0B,wBAA1B;;AAGA,IAAqB,gBAArB;AAAA;;AAAA;;AAAA,8BAAA;AAAA;;AAAA;;0CAAA,CACE;;AACO,UAAA,WAAA,GAAc,IAAI,OAAJ,GAAc,YAAd,CAA4B,WAA1C;AACA,UAAA,QAAA,GAAW,EAAX;AACC,UAAA,WAAA,GAAc,IAAI,eAAJ,EAAd,CAJV,CAME;;AACQ,UAAA,aAAA,GAAgB,IAAI,aAAJ,EAAhB;AAPV;AA6DC,GA7DD,CASE;;;AATF;AAAA;AAAA;AAAA,mFAUS;AAAA;;AAAA;AAAA;AAAA;AAAA;AACL,qBAAK,aAAL,CAAmB,oBAAnB,CAAwC,qBAAxC;AADK;;AAAA,qBAGC,KAAK,QAHN;AAAA;AAAA;AAAA;;AAIK,gBAAA,QAJL,GAIgB,MAAM,CAAC,6BAAD,CAJtB;;AAAA,oBAMI,QANJ;AAAA;AAAA;AAAA;;AAOC,oBAAI,aAAJ,GAAoB,oBAApB;AAPD;;AAAA;AAWK,gBAAA,UAXL,GAWkB,QAAQ,CAAC,IAAT,CAAc,iBAAd,CAAgC,UAAhC,CACjB,IAAI,OAAJ,GAAc,YAAd,CAA4B,KADX,EAEjB,QAFiB,CAXlB;AAAA;AAAA,gDAeK,KAAK,WAAL,CAAiB,IAAjB,CAAsB,WAf3B,0DAeK,sBAAmC,4BAAnC,CACJ,UADI,CAfL;;AAAA;AAAA;AAAA,iDAkBK,KAAK,WAAL,CAAiB,IAAjB,CAAsB,WAlB3B,2DAkBK,uBAAmC,cAAnC,CAAkD,KAAK,QAAvD,CAlBL;;AAAA;AAAA,8BAqBG,OArBH;AAAA;AAAA,iDAsBK,KAAK,WAAL,CAAiB,IAAjB,CAAsB,WAtB3B,2DAsBK,uBAAmC,aAAnC,CAAiD;AACrD,kBAAA,WAAW,EAAE,KAAK;AADmC,iBAAjD,CAtBL;;AAAA;AAAA;AAAA;AAAA,uBAyBK,KAAK,WAAL,CAAiB,EAAjB,CAAoB,UAApB,CAA+B,QAA/B,EACH,GADG,0BACC,IAAI,OAAJ,GAAc,YADf,0DACC,sBAA4B,EAD7B,EAEH,MAFG,CAEI;AACN,kBAAA,WAAW,EAAE,KAAK;AADZ,iBAFJ,CAzBL;;AAAA;AAAA;AAAA;AAAA;AAAA,mCAqBW,GArBX;;AAAA;AAgCH,oBAAI,OAAJ,GAAc,OAAd,CAAsB,IAAtB,iCACK,IAAI,OAAJ,GAAc,YADnB;AAEE,kBAAA,WAAW,EAAE,KAAK;AAFpB;AAKA,oBAAI,OAAJ,GAAc,IAAd;AAEA,oBAAI,WAAJ,GAAkB,SAAlB,CACE,6CADF;AAvCG;AAAA;;AAAA;AAAA;AAAA;AA2CH,oBAAI,WAAJ,GAAkB,SAAlB,CACE,KAAK,WAAL,CAAiB,eAAjB,aADF,EAEE,OAFF;;AA3CG;AAAA;AAgDH,oBAAI,aAAJ,GAAoB,oBAApB;AAhDG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAVT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAA8C,UAA9C,CAAA;;AAAqB,gBAAgB,GAAA,UAAA,CAAA,CADpC,SACoC,CAAA,EAAhB,gBAAgB,CAAhB;eAAA,gB","sourcesContent":["import VueWrapper from '@/components/core/Vue/vue.wrapper';\nimport { CoreService, FirebaseService, LoaderService, Session } from '@/sdk';\nimport firebase from 'firebase/app';\nimport { Component } from 'vue-property-decorator';\n\n@Component\nexport default class ProfileComponent extends VueWrapper {\n  // Properties\n  public DisplayName = new Session().SessionValue!.DisplayName;\n  public Password = '';\n  private FirebaseSrv = new FirebaseService();\n\n  // Services\n  private LoaderService = new LoaderService();\n\n  // Methods\n  public async updateProfile() {\n    this.LoaderService.showFullScreenLoader('Updating profile...');\n    try {\n      if (this.Password) {\n        const currPass = prompt('Enter your current password');\n\n        if (!currPass) {\n          new LoaderService().hideFullScreenLoader();\n          return;\n        }\n\n        const credential = firebase.auth.EmailAuthProvider.credential(\n          new Session().SessionValue!.Email,\n          currPass\n        );\n        await this.FirebaseSrv.Auth.currentUser?.reauthenticateWithCredential(\n          credential\n        );\n        await this.FirebaseSrv.Auth.currentUser?.updatePassword(this.Password);\n      }\n\n      await Promise.all([\n        await this.FirebaseSrv.Auth.currentUser?.updateProfile({\n          displayName: this.DisplayName\n        }),\n        await this.FirebaseSrv.Db.collection('/users')\n          .doc(new Session().SessionValue?.Id)\n          .update({\n            DisplayName: this.DisplayName\n          })\n      ]);\n\n      new Session().Session.next({\n        ...new Session().SessionValue!,\n        DisplayName: this.DisplayName\n      });\n\n      new Session().save();\n\n      new CoreService().showAlert(\n        'Your profile has been updated successfully!'\n      );\n    } catch (err) {\n      new CoreService().showAlert(\n        this.FirebaseSrv.getErrorMessage(err),\n        'error'\n      );\n    } finally {\n      new LoaderService().hideFullScreenLoader();\n    }\n  }\n}\n"],"sourceRoot":""}]}