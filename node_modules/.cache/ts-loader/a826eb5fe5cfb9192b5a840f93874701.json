{"remainingRequest":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/thread-loader/dist/cjs.js!/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/babel-loader/lib/index.js!/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/ts-loader/index.js??ref--14-3!/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/eslint-loader/index.js??ref--13-0!/Users/kharelthompson/Coding/its-lit-app UPWORK/public/src/sdk/services/shared/core.service.ts","dependencies":[{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/src/sdk/services/shared/core.service.ts","mtime":1618831816712},{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/cache-loader/dist/cjs.js","mtime":1618827696254},{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/thread-loader/dist/cjs.js","mtime":1618827696331},{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/babel-loader/lib/index.js","mtime":1618827696227},{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/ts-loader/index.js","mtime":1618827724380},{"path":"/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/eslint-loader/index.js","mtime":1618827722778}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMva2hhcmVsdGhvbXBzb24vQ29kaW5nL2l0cy1saXQtYXBwIFVQV09SSy9wdWJsaWMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMva2hhcmVsdGhvbXBzb24vQ29kaW5nL2l0cy1saXQtYXBwIFVQV09SSy9wdWJsaWMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKdmFyIENvcmVTZXJ2aWNlXzE7CmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IHNpbmdsZXRvbiB9IGZyb20gJ0Avc2RrL2NvcmUnOwoKdmFyIENvcmVTZXJ2aWNlID0gQ29yZVNlcnZpY2VfMSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gQ29yZVNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29yZVNlcnZpY2UpOwoKICAgIHRoaXMuRHJhd2VyTW9kZSA9IHRydWU7IC8vIEFsZXJ0CgogICAgdGhpcy5BbGVydCA9IHsKICAgICAgTW9kZTogZmFsc2UsCiAgICAgIFRleHQ6ICcnLAogICAgICBDb2xvcjogJ3N1Y2Nlc3MnLAogICAgICBDbG9zZTogdHJ1ZQogICAgfTsKICB9CgogIF9jcmVhdGVDbGFzcyhDb3JlU2VydmljZSwgW3sKICAgIGtleTogInNob3dBbGVydCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2hvd0FsZXJ0KHRleHQpIHsKICAgICAgdmFyIGNvbG9yID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnc3VjY2Vzcyc7CiAgICAgIHZhciBjbG9zZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogdHJ1ZTsKCiAgICAgIHZhciBfQ29yZVNlcnZpY2VfID0gbmV3IENvcmVTZXJ2aWNlXzEoKSwKICAgICAgICAgIEFsZXJ0ID0gX0NvcmVTZXJ2aWNlXy5BbGVydDsKCiAgICAgIEFsZXJ0Lk1vZGUgPSB0cnVlOwogICAgICBBbGVydC5UZXh0ID0gdGV4dDsKICAgICAgQWxlcnQuQ29sb3IgPSBjb2xvcjsKICAgICAgQWxlcnQuQ2xvc2UgPSBjbG9zZTsKICAgIH0KICB9XSk7CgogIHJldHVybiBDb3JlU2VydmljZTsKfSgpOwoKQ29yZVNlcnZpY2UgPSBDb3JlU2VydmljZV8xID0gX19kZWNvcmF0ZShbc2luZ2xldG9uXSwgQ29yZVNlcnZpY2UpOwpleHBvcnQgeyBDb3JlU2VydmljZSB9Ow=="},{"version":3,"sources":["/Users/kharelthompson/Coding/its-lit-app UPWORK/public/node_modules/eslint-loader/index.js??ref--13-0!/Users/kharelthompson/Coding/its-lit-app UPWORK/public/src/sdk/services/shared/core.service.ts"],"names":[],"mappings":";;;;AAAA,SAAS,SAAT,QAA0B,YAA1B;;AAGA,IAAa,WAAW,GAAA,aAAxB;AAAA,yBAAA;AAAA;;AACS,SAAA,UAAA,GAAa,IAAb,CADT,CAGE;;AACO,SAAA,KAAA,GAAQ;AACb,MAAA,IAAI,EAAE,KADO;AAEb,MAAA,IAAI,EAAE,EAFO;AAGb,MAAA,KAAK,EAAE,SAHM;AAIb,MAAA,KAAK,EAAE;AAJM,KAAR;AAkBR;;AAtBD;AAAA;AAAA,WAWS,mBACL,IADK,EAGO;AAAA,UADZ,KACY,uEADiB,SACjB;AAAA,UAAZ,KAAY,uEAAJ,IAAI;;AAAA,0BAEM,IAAI,aAAJ,EAFN;AAAA,UAEJ,KAFI,iBAEJ,KAFI;;AAGZ,MAAA,KAAK,CAAC,IAAN,GAAa,IAAb;AACA,MAAA,KAAK,CAAC,IAAN,GAAa,IAAb;AACA,MAAA,KAAK,CAAC,KAAN,GAAc,KAAd;AACA,MAAA,KAAK,CAAC,KAAN,GAAc,KAAd;AACD;AArBH;;AAAA;AAAA,GAAA;;AAAa,WAAW,GAAA,aAAA,GAAA,UAAA,CAAA,CADvB,SACuB,CAAA,EAAX,WAAW,CAAX;SAAA,W","sourcesContent":["import { singleton } from '@/sdk/core';\n\n@singleton\nexport class CoreService {\n  public DrawerMode = true;\n\n  // Alert\n  public Alert = {\n    Mode: false,\n    Text: '',\n    Color: 'success' as 'error' | 'success',\n    Close: true\n  };\n\n  public showAlert(\n    text: string,\n    color: 'error' | 'success' = 'success',\n    close = true\n  ) {\n    const { Alert } = new CoreService();\n    Alert.Mode = true;\n    Alert.Text = text;\n    Alert.Color = color;\n    Alert.Close = close;\n  }\n}\n"],"sourceRoot":""}]}